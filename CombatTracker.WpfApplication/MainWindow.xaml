<Window x:Class="CombatTracker.WpfApplication.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CombatTracker.WpfApplication"
        xmlns:viewModel="clr-namespace:CombatTracker.WpfApplication.Model"
        xmlns:validation="clr-namespace:CombatTracker.WpfApplication.Validation"
        xmlns:designViewModel="clr-namespace:CombatTracker.WpfApplication.Model.Design"
        mc:Ignorable="d"
        Title="D&amp;D 5e CombatTracker" Height="350" Width="525">

    <Grid d:DataContext="{d:DesignInstance Type=designViewModel:MainWindowViewModel, IsDesignTimeCreatable=True}">

        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <!-- Character List -->
        <ListView Name="CharactersListView" Margin="5,5,2,3" ItemsSource="{Binding Path=Characters}" 
                  Grid.Column="0" Grid.Row="0" SelectionChanged="CharactersListView_SelectionChanged">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Init" Width="25" DisplayMemberBinding="{Binding Path=Initiative}" />
                    <GridViewColumn Header="Name" Width="Auto"  DisplayMemberBinding="{Binding Path=Name}" />
                    <GridViewColumn Header="HP" Width="75">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Path=CurrentHitPoints}" />
                                    <TextBlock Text="/"/>
                                    <TextBlock Text="{Binding Path=MaximumHitPoints}" />
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Temp HP" Width="75" DisplayMemberBinding="{Binding Path=TemporaryHitPoints}" />
                </GridView>
            </ListView.View>
        </ListView>

        <!-- Character Form -->
        <Grid Name="CharacterGrid" Margin="5,2,2,3" Grid.Column="0" Grid.Row="1" DataContext="{Binding Current}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="Name" Margin="0,2,0,0" />
            <TextBlock Grid.Row="1" Grid.Column="0" Text="Initiative" Margin="0,2,0,0" />
            <TextBlock Grid.Row="2" Grid.Column="0" Text="HP" Margin="0,2,0,0" />
            <TextBlock Grid.Row="3" Grid.Column="0" Text="Death Saves" Margin="0,2,0,0" />
            <TextBlock Grid.Row="4" Grid.Column="0" Text="Conditions" Margin="0,2,0,0" />

            <!-- Name -->
            <TextBox Name="NameText" Grid.Row="0" Grid.Column="1" Margin="5,2,0,3" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FormEnabled}">
                <TextBox.Text>
                    <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validation:RequiredValueValidationRule ValidationStep="RawProposedValue" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <!-- Inititive -->
            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="5,2,0,3">
                <TextBox Name="InitiativeText" Width="25" Margin="0,0,5,0" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FormEnabled}">
                    <TextBox.Text>
                        <Binding Path="Initiative" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:RequiredValueValidationRule ValidationStep="RawProposedValue" />
                                <validation:IntParseValidationRule ValidationStep="RawProposedValue" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button Name="RollInitiative" Style="{StaticResource basicButton}" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FormEnabled}" Click="RollInitiative_Click">Roll</Button>
            </StackPanel>

            <!-- HP -->
            <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Margin="5,2,0,3">
                <TextBox Name="CurrentHitPointsText" Width="25" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FormEnabled}">
                    <TextBox.Text>
                        <Binding Path="CurrentHitPoints" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:RequiredValueValidationRule ValidationStep="RawProposedValue" />
                                <validation:IntParseValidationRule ValidationStep="RawProposedValue" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock Text="/"/>
                <TextBox Name="MaximumHitPointsText" Width="25" Margin="0,0,9,0" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FormEnabled}">
                    <TextBox.Text>
                        <Binding Path="MaximumHitPoints" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:RequiredValueValidationRule ValidationStep="RawProposedValue" />
                                <validation:IntParseValidationRule ValidationStep="RawProposedValue" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock Margin="0,0,3,0" Text="Temp HP" />
                <TextBox Name="TemporaryHitPointsText" Width="25" Margin="0,0,5,0" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FormEnabled}">
                    <TextBox.Text>
                        <Binding Path="TemporaryHitPoints" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:RequiredValueValidationRule ValidationStep="RawProposedValue" />
                                <validation:IntParseValidationRule ValidationStep="RawProposedValue" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock Margin="0,0,3,0" Text="Turns" />
                <TextBox Name="TemporaryHitPointsTurnsText" Width="25" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FormEnabled}">
                    <TextBox.Text>
                        <Binding Path="TemporaryHitPointsTurns" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:NullableIntParseValidationRule ValidationStep="RawProposedValue" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </StackPanel>

            <!-- Death Saves -->
            <Grid Grid.Row="3" Grid.Column="1" Margin="5,2,0,3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="Success" />
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Failure" />

                <CheckBox Grid.Row="0" Grid.Column="1" IsChecked="{Binding DeathSaveSuccessChecked[0]}">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DeathSaveSuccessEnabled[0]}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FormEnabled}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <CheckBox Grid.Row="0" Grid.Column="2" IsChecked="{Binding DeathSaveSuccessChecked[1]}">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DeathSaveSuccessEnabled[1]}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FormEnabled}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <CheckBox Grid.Row="0" Grid.Column="3" IsChecked="{Binding DeathSaveSuccessChecked[2]}">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DeathSaveSuccessEnabled[2]}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FormEnabled}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>

                <CheckBox Grid.Row="1" Grid.Column="1" IsChecked="{Binding DeathSaveFailureChecked[0]}">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DeathSaveFailureEnabled[0]}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FormEnabled}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <CheckBox Grid.Row="1" Grid.Column="2" IsChecked="{Binding DeathSaveFailureChecked[1]}">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DeathSaveFailureEnabled[1]}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FormEnabled}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <CheckBox Grid.Row="1" Grid.Column="3" IsChecked="{Binding DeathSaveFailureChecked[2]}">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DeathSaveFailureEnabled[2]}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FormEnabled}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
            </Grid>

            <ListView Grid.Row="4" Grid.Column="1" Margin="5,2,0,0" ItemsSource="{Binding Conditions}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Condition" DisplayMemberBinding="{Binding Name}" />
                        <GridViewColumn Header="Turns" DisplayMemberBinding="{Binding Turns}" />
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>

        <!-- Character Control Buttons -->
        <StackPanel 
                Margin="5,2,2,5"
                HorizontalAlignment="Right"
                Orientation="Horizontal"
                Grid.Column="0" Grid.Row="2">
            <Button Margin="0,0,5,0" Style="{StaticResource basicButton}" Click="Create_Click">Create</Button>
            <Button Margin="0,0,0,0" Style="{StaticResource basicButton}" Click="Delete_Click">Delete</Button>
        </StackPanel>
        
        <!-- Turn Control Buttons -->
        <StackPanel 
                Margin="3,2,5,5"
                HorizontalAlignment="Right"
                Orientation="Horizontal"
                Grid.Column="1" Grid.Row="2">
            <Button Margin="0,0,5,0" Style="{StaticResource basicButton}">Previous</Button>
            <Button Margin="0,0,0,0" Style="{StaticResource basicButton}">Next</Button>
        </StackPanel>
    </Grid>
</Window>
